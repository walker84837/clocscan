name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Upload Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build Release Binary
        run: |
          cargo build --release
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/release/clocscan.exe dist/clocscan-${{ matrix.os }}.exe
          else
            cp target/release/clocscan dist/clocscan-${{ matrix.os }}
          fi
        shell: bash
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: clocscan-${{ matrix.os }}
          path: |
            dist/clocscan-${{ matrix.os }}*
          if-no-files-found: error

  release:
    name: Create Draft Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Draft Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
